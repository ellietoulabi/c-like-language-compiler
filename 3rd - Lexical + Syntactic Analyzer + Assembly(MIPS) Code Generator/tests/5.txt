input:


int main(){


	int a[2];

	int t=2;


	if(t + 5 < 9){

		a[1]=0;
		a[0]=6;
	}

	print(a[0]);
	print(a[1]);


}


output:

[+] Parse : 

 PROGRAM  main_function  typeSpecifier int main  (  )  compoundStmt  { 2080700123 statements  stmt 1544445988 singleStmt  declaration  typeSpecifier int declaration_list  sub_decl  array_access  identifier a [  constants 2 ]  ;  statements  stmt 1544445988 singleStmt  declaration  typeSpecifier int declaration_list  sub_decl  assignment_expr  identifier t identifier  TOKEN_ID = constants 2 ;  statements  stmt 2080700123 singleStmt  conditionStmt  if  (  expression  sub_expr  sub_expr  arithmetic_expr  identifier t +  constants 5 <  sub_expr  constants 9 )  compoundStmt  { 1544445988 statements  stmt 1544445988 singleStmt  declaration  declaration_list  sub_decl  assignment_expr  array_access  identifier a [  constants 1 ]  array_access  identifier  TOKEN_ID  TOKEN_LB  constants  TOKEN_INTCONST  TOKEN_RB = constants 0 ;  statements  stmt 1544445988 singleStmt  declaration  declaration_list  sub_decl  assignment_expr  array_access  identifier a [  constants 0 ]  array_access  identifier  TOKEN_ID  TOKEN_LB  constants  TOKEN_INTCONST  TOKEN_RB = constants 6 ;  }  statements  stmt 2080700123 singleStmt  printFunc  (  sub_expr  array_access  identifier a [  constants 0 ]  )  ;  statements  stmt 2080700123 singleStmt  printFunc  (  sub_expr  array_access  identifier a [  constants 1 ]  )  ;  } 


[+] ASM :
.data
        backn: .asciiz "\n"
.text
.globl main
main :
        daddiu  $sp,$sp,-8
        sd      $fp,0($sp)
        move    $fp,$sp
        li      $t0,2
        sw      $t0,8($fp)
        li    $t0,0
        lw    $t1,8($fp)
        addiu   $t0,$t1,5
        move  $t0,$t6
        li  $t0,9
        move  $t0,$t7
        bge  $t6,$7,C0
        nop
        li      $t0,0
        sw      $t0,4($fp)
        li      $t0,6
        sw      $t0,0($fp)
C0:
        lw     $a0,0($fp)
        li   $v0,1
        syscall
        lw     $a0,4($fp)
        li   $v0,1
        syscall
        move    $v0,$0
        move    $sp,$fp
        ld      $fp,0($sp)
        daddiu  $sp,$sp,8
        j       $31
        nop



[#] ERRORS :
