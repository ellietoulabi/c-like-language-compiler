input:


int func(int a,int b){

	return a+b;

}


int main(){

	int t=func(3,7);

	print(t);


}


output:


[+] Parse : 

 PROGRAM  function  typeSpecifier int identifier func (  argumentList  arguments  arg  typeSpecifier int identifier a ,  arg  typeSpecifier int identifier b )  compoundStmt  { 616220330 statements  stmt 616220330 singleStmt return sub_expr  arithmetic_expr  identifier a +  identifier b ;  }  main_function  typeSpecifier int main  (  )  compoundStmt  { 296623831 statements  stmt 296623831 singleStmt  declaration  typeSpecifier int declaration_list  sub_decl  assignment_expr  identifier t identifier  TOKEN_ID = functionCall  identifier func (  parameter_list  parameter  sub_expr  constants 3 ,  parameter  sub_expr  constants 7 )  ;  statements  stmt 296623831 singleStmt  printFunc  (  sub_expr  identifier t )  ;  } 


[+] ASM :
.data
        backn: .asciiz "\n"
.text
.globl main
func:
        daddiu  $sp,$sp,-16
        sd      $fp,8($sp)
        move    $fp,$sp
        sw  $a0,0($fp)
        sw  $a1,4($fp)
        li    $t0,0
        lw    $t1,0($fp)
        lw   $t2,4($fp)
        addu    $t0,$t2,$t1
        move $t0,$v0
        move    $sp,$fp
        ld      $fp,8($sp)
        daddiu  $sp,$sp,16
        j       $31
        nop
main :
        daddiu  $sp,$sp,-12
        sd      $fp,4($sp)
        move    $fp,$sp
        li  $t0,3
        move $t0,a1
        li  $t0,7
        move $t0,a2
        jal func
        sw   $v0,0($fp)
        lw     $a0,0($fp)
        li   $v0,1
        syscall
        move    $v0,$0
        move    $sp,$fp
        ld      $fp,4($sp)
        daddiu  $sp,$sp,12
        j       $31
        nop



[#] ERRORS :
